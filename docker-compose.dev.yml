version: '3.8'

services:
  # ================================================
  # PostgreSQL Database
  # ================================================
  postgres:
    image: postgres:16-alpine
    container_name: saas-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: saas_boilerplate
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  # ================================================
  # Redis Cache & Queue
  # ================================================
  redis:
    image: redis:7-alpine
    container_name: saas-redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  # ================================================
  # Backend API
  # ================================================
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: saas-backend
    restart: unless-stopped
    ports:
      - '3000:3000'
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/saas_boilerplate?schema=public
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: dev-secret-key-change-in-production-minimum-32-characters-long
      JWT_REFRESH_TOKEN_SECRET: dev-refresh-secret-key-change-in-production-32-chars
      CORS_ORIGINS: http://localhost:3001
      LOG_LEVEL: debug
      LOG_PRETTY_PRINT: 'true'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend/src:/app/src
    command: npm run start:dev

  # ================================================
  # Prisma Studio (Database GUI)
  # ================================================
  prisma-studio:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: build
    container_name: saas-prisma-studio
    restart: unless-stopped
    ports:
      - '5555:5555'
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/saas_boilerplate?schema=public
    depends_on:
      postgres:
        condition: service_healthy
    command: npx prisma studio --port 5555

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: saas-network
